{"version":3,"file":"index.cjs","sources":["../src/abis/erc20.ts","../src/abis/tcEthVault.ts","../src/amount.ts","../src/asset.ts","../src/errors/types.ts","../src/errors/apiError.ts","../src/network.ts","../src/thorchain.ts","../src/wallet.ts"],"sourcesContent":["export const erc20ABI = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      { internalType: 'address', name: '', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: 'success', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: 'success', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'from', type: 'address' },\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: 'success', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export const TCEthereumVaultAbi = [\n  {\n    inputs: [{ internalType: 'address', name: 'rune', type: 'address' }],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'oldVault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newVault', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferAllowance',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'vault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferOut',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'vault', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'target', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'address', name: 'finalAsset', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amountOutMin', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferOutAndCall',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'oldVault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newVault', type: 'address' },\n      {\n        components: [\n          { internalType: 'address', name: 'asset', type: 'address' },\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        indexed: false,\n        internalType: 'struct THORChain_Router.Coin[]',\n        name: 'coins',\n        type: 'tuple[]',\n      },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'VaultTransfer',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'RUNE',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n      { internalType: 'uint256', name: 'expiration', type: 'uint256' },\n    ],\n    name: 'depositWithExpiry',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'router', type: 'address' },\n      { internalType: 'address payable', name: 'asgard', type: 'address' },\n      {\n        components: [\n          { internalType: 'address', name: 'asset', type: 'address' },\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        internalType: 'struct THORChain_Router.Coin[]',\n        name: 'coins',\n        type: 'tuple[]',\n      },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'returnVaultAssets',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'router', type: 'address' },\n      { internalType: 'address', name: 'newVault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferAllowance',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'to', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferOut',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'aggregator', type: 'address' },\n      { internalType: 'address', name: 'finalToken', type: 'address' },\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256', name: 'amountOutMin', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferOutAndCall',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'token', type: 'address' },\n    ],\n    name: 'vaultAllowance',\n    outputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n\nexport const TCAvalancheDepositABI = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'oldVault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newVault', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferAllowance',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'vault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'asset', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferOut',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'vault', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'target', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { indexed: false, internalType: 'address', name: 'finalAsset', type: 'address' },\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amountOutMin', type: 'uint256' },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'TransferOutAndCall',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'oldVault', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newVault', type: 'address' },\n      {\n        components: [\n          { internalType: 'address', name: 'asset', type: 'address' },\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        indexed: false,\n        internalType: 'struct AvaxRouter.Coin[]',\n        name: 'coins',\n        type: 'tuple[]',\n      },\n      { indexed: false, internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'VaultTransfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n      { internalType: 'uint256', name: 'expiration', type: 'uint256' },\n    ],\n    name: 'depositWithExpiry',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'router', type: 'address' },\n      { internalType: 'address payable', name: 'asgard', type: 'address' },\n      {\n        components: [\n          { internalType: 'address', name: 'asset', type: 'address' },\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        internalType: 'struct AvaxRouter.Coin[]',\n        name: 'coins',\n        type: 'tuple[]',\n      },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'returnVaultAssets',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'router', type: 'address' },\n      { internalType: 'address', name: 'newVault', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferAllowance',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'to', type: 'address' },\n      { internalType: 'address', name: 'asset', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferOut',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address payable', name: 'target', type: 'address' },\n      { internalType: 'address', name: 'finalToken', type: 'address' },\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256', name: 'amountOutMin', type: 'uint256' },\n      { internalType: 'string', name: 'memo', type: 'string' },\n    ],\n    name: 'transferOutAndCall',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'vault', type: 'address' },\n      { internalType: 'address', name: 'token', type: 'address' },\n    ],\n    name: 'vaultAllowance',\n    outputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { BigNumber, FixedNumber } from '@ethersproject/bignumber';\n\nexport enum Denomination {\n  /**\n   * values for asset amounts in base units (no decimal)\n   */\n  Base = 'BASE',\n  /**\n   * values of asset amounts (w/ decimal)\n   */\n  Asset = 'ASSET',\n}\n\ntype AmountWithDenom<T, U = BigNumber | FixedNumber> = T extends Denomination\n  ? {\n      type: T;\n      amount: () => U;\n      plus: (value: U | AmountWithDenom<T, U>, decimal?: number) => AmountWithDenom<T, U>;\n      minus: (value: U | AmountWithDenom<T, U>, decimal?: number) => AmountWithDenom<T, U>;\n      times: (value: U | AmountWithDenom<T, U>, decimal?: number) => AmountWithDenom<T, U>;\n      div: (value: U | AmountWithDenom<T, U>, decimal?: number) => AmountWithDenom<T, U>;\n      gt: (value: U | AmountWithDenom<T, U>) => boolean;\n      gte: (value: U | AmountWithDenom<T, U>) => boolean;\n      lt: (value: U | AmountWithDenom<T, U>) => boolean;\n      lte: (value: U | AmountWithDenom<T, U>) => boolean;\n      eq: (value: U | AmountWithDenom<T, U>) => boolean;\n      decimal: number;\n    }\n  : never;\n\nexport type AmountWithBaseDenom = AmountWithDenom<Denomination.Base, BigNumber>;\nexport type AmountWithAssetDenom = AmountWithDenom<Denomination.Asset, FixedNumber>;\n","import { Chain } from './network.js';\n\nexport enum AssetSymbol {\n  THOR = 'THOR',\n  RUNE = 'RUNE',\n  'RUNE-67C' = 'RUNE-67C',\n  'RUNE-B1A' = 'RUNE-B1A',\n  ATOM = 'ATOM',\n  MUON = 'MUON',\n  USDC = 'USDC',\n}\n\nexport type Asset = {\n  chain: Chain;\n  symbol: string;\n  ticker: string;\n  synth?: boolean;\n};\n","export enum ERROR_TYPE {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  REQUEST_PARAMETER_ERROR = 'REQUEST_PARAMETER_ERROR',\n  RESPONSE_PARSING_ERROR = 'RESPONSE_PARSING_ERROR',\n  UNHANDLED_ERROR = 'UNHANDLED_ERROR',\n  INCOMPATIBLE_ASSETS_OPERATIONS = 'INCOMPATIBLE_ASSETS_OPERATIONS',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  UNSUPPORTED_ASSET = 'UNSUPPORTED_ASSET',\n  MISSING_INBOUND_INFO = 'MISSING_INBOUND_INFO',\n  QUOTE_FETCHING_ERROR = 'QUOTE_FETCHING_ERROR',\n  AIRDROP_ERROR = 'AIRDROP_ERROR',\n}\n\nexport enum ERROR_MODULE {\n  // Controllers\n  HEALTH_CONTROLLER = '1000',\n  LIQUIDITY_CONTROLLER = '1001',\n  PROVIDER_CONTROLLER = '1002',\n  QUOTE_CONTROLLER = '1003',\n  SWAP_CONTROLLER = '1004',\n  UTIL_CONTROLLER = '1005',\n  AIRDROP_CONTROLLER = '1006',\n  // Entities\n  PROVIDER_ENTITY = '2000',\n  // Providers\n  THORCHAIN_PROVIDER = '3000',\n  // Utilities\n  PROVIDER_UTIL = '4000',\n  // AirDrop\n  AIRDROP_UTIL = '6000',\n}\n\nexport enum ERROR_CODE {\n  // 10xx - Conditions\n  INVALID_INPUT_PARAMETERS = '1000',\n  UNKNOWN_PROVIDERS = '1001',\n  CANNOT_FIND_INBOUND_ADDRESS = '1002',\n  NO_INBOUND_ADDRESSES = '1003',\n  CHAIN_HALTED_OR_UNSUPPORTED = '1004',\n  MISSING_INPUT_PARAMETER = '1005',\n  // 20xx - Quote request parameters\n  SELL_AMOUNT_MUST_BE_POSITIVE_INTEGER = '2000',\n  SELL_BUY_ASSETS_ARE_THE_SAME = '2001',\n  MISSING_SOURCE_ADDRESS_FOR_SYNTH = '2002',\n  AFF_ADDRESS_AND_BPS_OR_NEITHER = '2003',\n  AFF_ADDRESS_TOO_LONG = '2004',\n  AFF_BPS_INTEGER_0_100 = '2005',\n  SOURCE_ADDRESS_INVALID_FOR_SELL_CHAIN = '2006',\n  DESTINATION_ADDRESS_INVALID_FOR_BUY_CHAIN = '2007',\n  PREFERRED_PROFVIDER_NOT_SUPPORTED = '2008',\n  DESTINATION_ADDRESS_SMART_CONTRACT = '2009',\n  // 21xx - Quote request providers issue\n  INVALID_PROVIDER = '2100',\n  MISSING_CROSS_CHAIN_PROVIDER = '2101',\n  MISSING_AVAX_PROVIDER = '2102',\n  MISSING_BSC_PROVIDER = '2103',\n  MISSING_ETH_PROVIDER = '2104',\n  INVALID_PROVIDER_FOR_SWAP_OUT = '2105',\n  // 22xx - Quote request assets issue\n  INVALID_CHAIN = '2200',\n  INVALID_ASSET = '2201',\n  INVALID_ASSET_IDENTIFIER = '2202',\n  UNSUPPORTED_ASSET = '2203',\n  UNSUPPORTED_CHAIN = '2204',\n  UNSUPPORTED_ASSET_FOR_SWAPOUT = '2205',\n  // 30xx - Thorchain\n  THORNODE_QUOTE_GENERIC_ERROR = '3000',\n  NOT_ENOUGH_SYNTH_BALANCE = '3001',\n  SYNTH_MINTING_CAP_REACHED = '3002',\n  // 60xx - Airdrop\n  ADDRESS_NOT_WHITELISTED = '6000',\n  ADDRESS_ALREADY_CLAIMED = '6001',\n}\n\nexport type ErrorInfo = {\n  status: number;\n  module: ERROR_MODULE;\n  code: ERROR_CODE;\n  type?: ERROR_TYPE;\n  message: string;\n  stack?: string;\n  options?: ApiErrorOptions;\n  identifier?: string;\n};\n\nexport type ApiErrorOptions = {\n  shouldLog?: boolean;\n  shouldTrace?: boolean;\n  shouldThrow?: boolean;\n};\n","import { ApiErrorOptions, ERROR_CODE, ERROR_MODULE, ERROR_TYPE, ErrorInfo } from './types.js';\n\nexport class ApiError extends Error {\n  public readonly status: number;\n  public readonly module: ERROR_MODULE;\n  public readonly code: ERROR_CODE;\n  public readonly type?: ERROR_TYPE;\n  public readonly message: string;\n  public readonly stack?: string;\n  public readonly options: ApiErrorOptions;\n\n  constructor({\n    status,\n    module,\n    code,\n    message,\n    type,\n    options: { shouldLog, shouldThrow, shouldTrace } = {},\n  }: ErrorInfo) {\n    super(message);\n    this.status = status;\n    this.module = module;\n    this.message = message;\n    this.code = code;\n    this.type = type ? type : ERROR_TYPE.UNHANDLED_ERROR;\n    this.options = {\n      shouldLog: shouldLog || true,\n      shouldTrace: shouldTrace || true,\n      shouldThrow: shouldThrow || true,\n    };\n\n    if (this.options.shouldTrace) Error.captureStackTrace(this);\n  }\n\n  public static fromErrorInfo(errorInfo: ErrorInfo) {\n    return new ApiError(errorInfo);\n  }\n\n  public identifier() {\n    return `${this.module}-${this.code}`;\n  }\n\n  public handle() {\n    const message = `[${this.type}.${this.module}]: ${this.message}`;\n\n    if (this.options.shouldLog) console.error(message, '\\n', this.stack || '');\n    if (this.options.shouldThrow) throw Error(message, { cause: this.stack });\n\n    return this.returnErrorInfo();\n  }\n\n  public returnErrorInfo() {\n    return { ...this, identifier: this.identifier() };\n  }\n}\n","export enum Chain {\n  Avalanche = 'AVAX',\n  Binance = 'BNB',\n  BinanceSmartChain = 'BSC',\n  Bitcoin = 'BTC',\n  BitcoinCash = 'BCH',\n  Cosmos = 'GAIA',\n  Doge = 'DOGE',\n  Ethereum = 'ETH',\n  Litecoin = 'LTC',\n  THORChain = 'THOR',\n}\n\nexport const SUPPORTED_CHAINS = [\n  Chain.THORChain,\n  Chain.Avalanche,\n  Chain.Bitcoin,\n  Chain.Ethereum,\n  Chain.Binance,\n  Chain.BinanceSmartChain,\n  Chain.Cosmos,\n  Chain.Doge,\n  Chain.BitcoinCash,\n  Chain.Litecoin,\n] as const;\n\nexport enum ContractAddress {\n  AVAX = '0x0000000000000000000000000000000000000000',\n  ETH = '0x0000000000000000000000000000000000000000',\n  BSC = '0x0000000000000000000000000000000000000000',\n  USDC_SPL_MINT_ADDRESS = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  USDC_SPL_TESTNET_MINT_ADDRESS = '6TEqT62wq5mbKQPubX9eFeNJRYXRJd79Hk51pZk7nZrB',\n}\n\nexport enum Network {\n  Mainnet = 'mainnet',\n  Testnet = 'testnet',\n}\n\nexport enum NetworkId {\n  Ethereum = 60,\n  Binance = 714,\n  THORChain = 931,\n}\n\nexport enum DerivationPath {\n  AVAX = \"m/44'/60'/0'/0\",\n  BCH = \"m/44'/145'/0'/0\",\n  BNB = \"m/44'/714'/0'/0\",\n  BSC = \"m/44'/60'/0'/0\",\n  BTC = \"m/84'/0'/0'/0\",\n  DOGE = \"m/44'/3'/0'/0\",\n  ETH = \"m/44'/60'/0'/0\",\n  GAIA = \"m/44'/118'/0'/0\",\n  LTC = \"m/84'/2'/0'/0\",\n  THOR = \"m/44'/931'/0'/0\",\n}\n\nexport type DerivationPathArray = [number, number, number, number, number];\n\nexport const NetworkDerivationPath: Record<Chain, DerivationPathArray> = {\n  AVAX: [44, 60, 0, 0, 0],\n  BCH: [84, 145, 0, 0, 0],\n  BNB: [44, 714, 0, 0, 0],\n  BSC: [44, 60, 0, 0, 0],\n  BTC: [84, 0, 0, 0, 0],\n  DOGE: [44, 3, 0, 0, 0],\n  ETH: [44, 60, 0, 0, 0],\n  GAIA: [44, 118, 0, 0, 0],\n  LTC: [84, 2, 0, 0, 0],\n  THOR: [44, 931, 0, 0, 0],\n};\n\nexport enum BaseDecimal {\n  AVAX = 18,\n  BCH = 8,\n  BNB = 8,\n  BSC = 18,\n  BTC = 8,\n  DOGE = 8,\n  ETH = 18,\n  GAIA = 6,\n  LTC = 8,\n  THOR = 8,\n}\n\nexport type EVMChain = Chain.Ethereum | Chain.BinanceSmartChain | Chain.Avalanche;\n\nexport enum ChainId {\n  Avalanche = '43114',\n  AvalancheHex = '0xa86a',\n  Binance = 'Binance-Chain-Tigris',\n  BinanceSmartChain = '56',\n  Bitcoin = 'bitcoin',\n  Bitcoincash = 'bitcoincash',\n  Cosmos = 'cosmoshub-4',\n  Dogecoin = 'dogecoin',\n  Ethereum = '1',\n  EthereumHex = '0x1',\n  Litecoin = 'litecoin',\n  Thorchain = 'thorchain-mainnet-v1',\n  ThorchainStagenet = 'thorchain-stagenet-v2',\n}\n\nexport enum RPCUrl {\n  Avalanche = 'https://node-router.thorswap.net/avalanche-c',\n  BinanceSmartChain = 'https://bsc-dataseed.binance.org',\n  Cosmos = 'https://node-router.thorswap.net/cosmos/rpc',\n  Ethereum = 'https://node-router.thorswap.net/ethereum',\n  Litecoin = 'https://node-router.thorswap.net/litecoin',\n  Bitcoin = 'https://node-router.thorswap.net/bitcoin',\n  Dogecoin = 'https://node-router.thorswap.net/dogecoin',\n  BitcoinCash = 'https://node-router.thorswap.net/bitcoin-cash',\n}\n\nexport enum ApiUrl {\n  Thorswap = 'https://api.thorswap.finance',\n}\n\nexport const ChainToRPC = {\n  [Chain.Avalanche]: RPCUrl.Avalanche,\n  [Chain.BinanceSmartChain]: RPCUrl.BinanceSmartChain,\n  [Chain.Ethereum]: RPCUrl.Ethereum,\n  [Chain.Cosmos]: RPCUrl.Cosmos,\n  [Chain.Litecoin]: RPCUrl.Litecoin,\n  [Chain.Bitcoin]: RPCUrl.Bitcoin,\n  [Chain.Doge]: RPCUrl.Dogecoin,\n  [Chain.BitcoinCash]: RPCUrl.BitcoinCash,\n};\n\nexport const ChainToChainId: Record<Chain, ChainId> = {\n  [Chain.Avalanche]: ChainId.Avalanche,\n  [Chain.Binance]: ChainId.Binance,\n  [Chain.BinanceSmartChain]: ChainId.BinanceSmartChain,\n  [Chain.Bitcoin]: ChainId.Bitcoin,\n  [Chain.BitcoinCash]: ChainId.Bitcoincash,\n  [Chain.Cosmos]: ChainId.Cosmos,\n  [Chain.Doge]: ChainId.Dogecoin,\n  [Chain.Ethereum]: ChainId.Ethereum,\n  [Chain.Litecoin]: ChainId.Litecoin,\n  [Chain.THORChain]: ChainId.Thorchain,\n};\n\nexport const ChainToHexChainId: Record<Chain, ChainId> = {\n  [Chain.Avalanche]: ChainId.AvalancheHex,\n  [Chain.Binance]: ChainId.Binance,\n  [Chain.BinanceSmartChain]: ChainId.BinanceSmartChain,\n  [Chain.Bitcoin]: ChainId.Bitcoin,\n  [Chain.BitcoinCash]: ChainId.Bitcoincash,\n  [Chain.Cosmos]: ChainId.Cosmos,\n  [Chain.Doge]: ChainId.Dogecoin,\n  [Chain.Ethereum]: ChainId.EthereumHex,\n  [Chain.Litecoin]: ChainId.Litecoin,\n  [Chain.THORChain]: ChainId.Thorchain,\n};\n\nexport const ChainIdToChain: Record<ChainId, Chain> = {\n  [ChainId.AvalancheHex]: Chain.Avalanche,\n  [ChainId.Avalanche]: Chain.Avalanche,\n  [ChainId.Binance]: Chain.Binance,\n  [ChainId.BinanceSmartChain]: Chain.BinanceSmartChain,\n  [ChainId.Bitcoin]: Chain.Bitcoin,\n  [ChainId.Bitcoincash]: Chain.BitcoinCash,\n  [ChainId.Cosmos]: Chain.Cosmos,\n  [ChainId.Dogecoin]: Chain.Doge,\n  [ChainId.EthereumHex]: Chain.Ethereum,\n  [ChainId.Ethereum]: Chain.Ethereum,\n  [ChainId.Litecoin]: Chain.Litecoin,\n  [ChainId.Thorchain]: Chain.THORChain,\n  [ChainId.ThorchainStagenet]: Chain.THORChain,\n};\n","export type GetAddressAndPubKeyResponse = {\n  bech32_address: string;\n  compressed_pk: any;\n  error_message: string;\n  return_code: number;\n};\n\nexport type Signature = {\n  pub_key: {\n    type: string;\n    value: string;\n  };\n  sequence: string;\n  signature: string;\n};\n\nexport enum ErrorCode {\n  NoError = 0x9000,\n}\n","import { AmountWithBaseDenom } from './amount.js';\nimport { Asset } from './asset.js';\n\nexport const MOCK_PHRASE =\n  'image rally need wedding health address purse army antenna leopard sea gain';\n\nexport enum WalletStatus {\n  NotInstalled,\n  Detected,\n}\n\nexport enum FeeOption {\n  Average = 'average',\n  Fast = 'fast',\n  Fastest = 'fastest',\n}\n\nexport enum FeeType {\n  FlatFee = 'base',\n  PerByte = 'byte',\n}\n\nexport type Balance = {\n  asset: Asset;\n  amount: AmountWithBaseDenom;\n};\n\nexport type Fees = Record<FeeOption, AmountWithBaseDenom> & {\n  type?: FeeType;\n};\nexport type FeeRate = number;\nexport type FeeRates = Record<FeeOption, FeeRate>;\nexport enum WalletOption {\n  'KEYSTORE' = 'KEYSTORE',\n  'XDEFI' = 'XDEFI',\n  'METAMASK' = 'METAMASK',\n  'COINBASE_WEB' = 'COINBASE_WEB',\n  'TREZOR' = 'TREZOR',\n  'TRUSTWALLET' = 'TRUSTWALLET',\n  'TRUSTWALLET_WEB' = 'TRUSTWALLET_WEB',\n  'LEDGER' = 'LEDGER',\n  'KEPLR' = 'KEPLR',\n  'BRAVE' = 'BRAVE',\n  'WALLETCONNECT' = 'WALLETCONNECT',\n}\n\nexport type EVMWalletOptions =\n  | WalletOption.BRAVE\n  | WalletOption.METAMASK\n  | WalletOption.TRUSTWALLET_WEB\n  | WalletOption.COINBASE_WEB;\n\nexport type Keystore = {\n  crypto: {\n    cipher: string;\n    ciphertext: string;\n    cipherparams: {\n      iv: string;\n    };\n    kdf: string;\n    kdfparams: {\n      prf: string;\n      dklen: number;\n      salt: string;\n      c: number;\n    };\n    mac: string;\n  };\n  id: string;\n  version: number;\n  meta: string;\n};\n\nexport type BaseWalletMethods = {\n  getAddress: () => string;\n};\n"],"names":["erc20ABI","TCEthereumVaultAbi","TCAvalancheDepositABI","Denomination","AssetSymbol","ERROR_TYPE","ERROR_MODULE","ERROR_CODE","ApiError","status","module","code","message","type","shouldLog","shouldThrow","shouldTrace","__publicField","errorInfo","Chain","SUPPORTED_CHAINS","ContractAddress","Network","NetworkId","DerivationPath","NetworkDerivationPath","BaseDecimal","ChainId","RPCUrl","ApiUrl","ChainToRPC","ChainToChainId","ChainToHexChainId","ChainIdToChain","ErrorCode","MOCK_PHRASE","WalletStatus","WalletStatus2","FeeOption","FeeType","WalletOption"],"mappings":"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"}